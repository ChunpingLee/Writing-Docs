#  Devops规划
## Devops几大重点：

```
1.建立全自动化部署流水线
2.建立自动化运维平台发现和解决问题
3.建立反馈机制和可视化
4.建立组织文化，人人承担价值流健康责任
```

## 一、强调几个概念
> 1. Devops不只是自动化，就像天文学不只是望远镜一样，还需要文化、规范和架构，以便在IT价值流中实现共同的目标
> 2. 开发部门与IT运维部门根本的、长期的冲突是：目标是对立的，这通常是产出技术债务的一个因素：
> 3. 对变化莫测的市场做出反应
> 4. 为客户提供稳定、可靠、安全的服务

## 二、Devops的价值
> 1. Devops能够提高公司业绩，实现开发、QA、IT运维及信息安全等各职能角色的目标，同事改善人们的境遇。
> 2. Devops有助于提高开发人员生产力

## 三、如何实施Devops？
### 1. Devops基础原则
> 1. 开发到运维快速从左向右流动（即需求到交付）
> 2. 从左向右每个阶段，应用持续快速工作反馈机制
> 3. 建立具有创意和高可信度的企业文化，支持动态、严格、科学的实验

### 2.从何处开始建设Devops？
> 1. 选择一个合适的价值流（即业务过程、业务流程）
> 2. 理解、可视化和运用价值流
> 3. 参考康威定律（注1）设计组织结构
> 4. 将运维融入日常开发工作

```
注1：康威定律和墨菲定律。

在设计系统时，应该多考虑 墨菲定律：
    任何事物都没有表面看起来那么简单。
    所有的事都会比你预计的时间长。
    可能出错的事总会出错。
    如果你担心某种情况发生，那么他就更有可能发生。
在划分系统时，应该多考虑 康威定律： 
    系统架构是公司组织架构的反映。
    应该按照业务闭环进行系统拆分／组织架构划分，实现闭环／高内聚／低耦合，减少沟通成本。
    如果沟通出现问题，那么应该考虑进行系统和组织架构的调整。
    在合适时机进行系统拆分，不要一开始就把系统／服务拆的非常细，虽然闭环，但是每个人维护的系统多，
    维护成本高。
```


### 3.如何逐步实践Devops？
> 1. 为部署流水线奠定基础：快速交付 __类生产环境__ 的开发测试基础设施
> 2. 实现快速可靠的自动化测试
> 3. 应用和实践持续集成
> 4. 自动化发布 --> 低风险发布（单体 --> 微服务）

### 4.价值流发布后，反馈的技术实践
>  1.建立能发现和解决问题的遥测系统

```
1.创建必要的遥测基础架构
2.在应用程序栈中创建监控（如detector）
3.结果通过信息辐射器向整个组织辐射（告警信息快速辐射）
4.端到端监控覆盖（i:应用程式监控[业务指标+应用指标]；ii:基础架构）
```

> 2.分析数据预测和实现目标

```
一、用均值和标准差识别潜在问题
1.基础架构监控必须部署，其余监控最简单的方法可通过分析历史典型中断异常事件反哺监控点部署
2.不但要主动地预防问题，还要快速探测和修复

二、非高斯分布数据集不宜使用均值/标准差识别潜在问题
1.恐引起告警泛滥或告警不足（任何一个对运维而言都是奔溃和致命的）
2.非高斯分布数据集的参考检测方法：
  i)快速傅里叶变换[常应用于图像处理]
  ii)线性回归
  iii)移动平均数[常用于抑制短期波动]
  iiii)Kolmogorov-Smirnov检验[常用于分析周期性度量数据差异，Grafana工具自带]
```

> 3.应用反馈，实现安全部署

```
1.实现生产环境稳定的诀窍在于频繁地进行小规模的变更，小而精的同时也方便各方评审
2.仅仅实现部署流程自动化是不够的，还要对部署过程监控，同时还要建立文化规范，人人承担业务价值流健康的责任
3.部署和变更要体现在监控流中，以保证监控流中每个人都了解相关活动
4.开发/架构和运维共同承担值班责任，确保上游架构和编码决策得到反馈
5.新服务--开发可自行管理上线后生产服务（一段时间），甚至不解散项目组，直到满足交接就绪审核(HRR)，过渡给运维集中化管理
6.老服务--可建立服务回传机制
注：【谷歌做法】
建立服务回传机制实践。通过采用这种实践，开发部门能快速地开发新服务；当一个服务对公司具有战略意义时，会有运维工程师加入团队；只在极少数情况下，当服务在生产环境中难以管理的时候，才会回传给开发人员。
``` 

> 4.A/B发布（灰度/蓝绿/滚动发布）

### 5.建立持续集成的企业文化
> 1. 公正学习企业文化
> 2. 不指责的事后分析会，并公开会议结果
> 3. 降低事故容忍度，鼓励评估风险
> 4. 生产环境故障演练
> 5. 将局部经验转化为全局改进
> 6. 预留组织学习改进时间

```
1. 例如知识库，或者单一源码库
2. 建立可重用组件
3. 组织内部交流传播知识
4. 非功能性需求来设计运维 *********[未完待续]
5. 可重用的运维用户故事纳入开发 *********[未完待续]
```

### 6.将信息安全融入每个人的日常工作
> 1. 将信息安全集成到生产环境遥测中*********[未完待续]

### 7. 保护部署流水线
> 1. 集成安全和合规要求
> 2. 低风险变更标准化
 


